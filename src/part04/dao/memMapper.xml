<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace = "per">
 	<select id="all" resultType="part04.dto.MemDTO">
 		SELECT * FROM mem ORDER BY num
 	</select>
 	
 	<select id="keynum" resultType="java.lang.Integer" flushCache="true">
 		SELECT mem_num_seq.nextval
 		FROM dual
 	</select>
 	<!-- 다중 insert -->
 	<!-- 
 		INSERT ALL 
 		INTO mem
 		VALUES(1,'홍길동', 30, '서울')
 		
 		INTO mem
 		VALUES(2, '유대리', 29, '경기')
 		
 		SELECT * FROM dual;
 	 -->
 	 
 	 <insert id="multiIns" parameterType="java.util.List">
 	 INSERT ALL
 	 <foreach collection="list" item="element" index="no"> <!-- list나 array로 받아올때는 위에 parameterType 작성안해도 무관 -->
 		INTO mem
 		VALUES(#{element.num}, #{element.name}, #{element.age}, #{element.loc})
 	 </foreach>
 	 SELECT * FROM dual
 	 </insert>
 	 
 	 <!-- 다중 삭제 -->
 	 <delete id="multiDel">
 	 	DELETE FROM mem
 	 	WHERE num IN(
 	 		<foreach collection="list" item="element" separator=",">
 	 			#{element}
 	 		</foreach>
 	 	)
 	 </delete>
 	 
 	 <delete id="multiDel2">
 	 	DELETE FROM mem
 	 	WHERE num IN(
 	 		<foreach collection="array" item="element" separator=",">
 	 			#{element}
 	 		</foreach>
 	 	)
 	 </delete>
 	 
 	 <!-- dynamic if -->
 	 <select id="search" parameterType="part04.dto.MemDTO" resultType="part04.dto.MemDTO">
 	 	SELECT * FROM mem
 	 	<!-- where을 요소로 넣어주면 불필요한 값을 제거해줌 -->
 	 <!--	<where> 
 	 		<if test="name!=null">
 	 			name like '%' || #{name} || '%'
 	 		</if>
 	 		<if test="age!=0">
				OR age>=#{age} 	 			
 	 		</if>
 	 	</where>  -->
 	 	
 	 	<!-- overrides가 나오면 제거시켜주는 것(prefix(앞) / suffix(뒤)) -->
 	 	<trim prefix="where" suffixOverrides="or/and">
 	 		<if test="name!=null">
 	 			name like '%' || #{name} || '%' OR
 	 		</if>
 	 		<if test="age!=0">
				 age>=#{age} 	 			
 	 		</if>
 	 	</trim>
 	 </select>
 	 
 	 
 	 <!-- 다중 update -->
 	 <update id="multiUpt" parameterType="part04.dto.MemDTO">
 	 	UPDATE mem
 	 	<!-- <set>
 	 	<if test="name!=null">
 	 	 	name = #{name},
 	 	</if>
 		<if test="age!=0">
 	 	 	age = #{age},
 	 	</if>
 	 	<if test="loc!=null">
 	 		loc = #{loc}
 	 	</if>
 	 	</set> -->
 	 	<trim prefix="set" suffixOverrides=",">
 	 		<if test="name!=null">
 	 		 	name = #{name},
 	 		</if>
 			<if test="age!=0">
 	 		 	age = #{age},
 	 		</if>
 	 		<if test="loc!=null">
 	 			loc = #{loc}
 	 		</if>
 	 	</trim>
 	 	WHERE num=#{num}
 	 </update>
 </mapper>